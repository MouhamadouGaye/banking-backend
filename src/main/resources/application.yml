spring:
  application:
    name: bsys
  datasource:
    url: jdbc:postgresql://localhost:5434/banking
    username: gaye
    password: Postgres.2424
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      isolation-level: READ_COMMITTED

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        dialect: org.hibernate.dialect.PostgreSQLDialect
        default_schema: public
    database-platform: org.hibernate.dialect.PostgreSQLDialect

  liquibase:
    enabled: false

app:
  jwt:
    secret: itrZjz8EfvXL+w+dxxhKygic2jH8sZ6fdUAJrj/GJNmdl8XfRXY0ZWGPAj6Sg1MGDcGJMKsYw1Dabaw7hv5GHA== # Use a strong secret in production
    expiration-ms: 86400000 # 24 hours

    public-key: -----BEGIN PUBLIC KEY-----\nYOUR_KEY_HERE\n-----END PUBLIC KEY-----


    # Logging (optional for debugging)
logging:
  level:
    org:
      hibernate:
        SQL: DEBUG
        type:
          descriptor:
            sql: TRACE
#   mail:
#     host: smtp.example.com
#     port: 587
#     username: noreply@banking.com
#     password: mail_password
#     properties:
#       mail:
#         smtp:
#           auth: true
#           starttls.enable: true
#     default-from: no-reply@yourdomain.com
#     default-reply-to: support@yourdomain.com
#     test-mode: false
#     test-recipient: test@yourdomain.com
    
#   liquibase:
#     change-log: classpath:db/changelog/db.changelog-master.xml
#     enabled: true

# banking:
#   app:
#     jwtSecret: yourJWTSecretKeyForBankingApplication1234567890
#     jwtExpirationMs: 86400000 # 24 hours
#     jwtRefreshExpirationMs: 604800000 # 7 days
#   frontend:
#     url: http://localhost:3000
#   jwt: 
#     refreshExpirationMs: 86400000 # 24 hours


# logging:
#   level:
#     org.springframework.security: DEBUG
#     com.banking: DEBUG

# management:
#   endpoints:
#     web:
#       exposure:
#         include: health,info,metrics
#   endpoint:
#     health:
#       show-details: always


#       # application.properties
# encryption:
#   secret: ${ENCRYPTION_SECRET:defaultEncryptionKey123} # Override in production

# credit-service:
#   url: https://api.creditservice.com/v1
#   api-key: ${CREDIT_SERVICE_API_KEY}

# notification:
#   sms:
#     sender-id: BANK_ALERTS
#     default-country-code: "+1"

# spring:
#   profiles:
#     active: dev # or 'prod' for production

# # Production configuration (would contain real API keys)
# acme:
#   kyc:
#     api-key: ${KYC_API_KEY}
#     base-url: https://api.acmekyc.com/v1

# worldcheck:
#   api-key: ${SANCTION_API_KEY}
#   base-url: https://api.worldcheck.com/v2
